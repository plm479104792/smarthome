package com.homecoo.smarthome.controller;

import java.util.Date;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.homecoo.smarthome.domain.AppVersion;
import com.homecoo.smarthome.domain.Device;
import com.homecoo.smarthome.domain.Gateway;
import com.homecoo.smarthome.domain.Message;
import com.homecoo.smarthome.service.IGateway;
import com.homecoo.smarthome.service.ITheme;
import com.homecoo.smarthome.service.IUser;

@Controller
public class AppGatewayController {

	public static final String SUCCESS_MESSAGE = "success";
	public static final String ERROR_MESSAGE = "failed";
	
	@Autowired
	public IGateway gatewayService;
	@Autowired
	private IUser userService;
	
	@Autowired
	private ITheme themeService;
	
	/**
	 * @author xiaobai
	 * @param gatewayJson,versionJson
	 * @Description:同步网关      由手机发送网关信息到服务器
	 * @test by xiaobai 2016-4-16 OK
	 */
	@ResponseBody
	@RequestMapping(value = "/appAsyncGatewayInfo", method = RequestMethod.POST,produces= { "application/json;charset=UTF-8" })
	public String asyncGatewayInfo(String gatewayJson,String versionJson){
		Message message = new Message();
		String messageJson = "";
		Gateway gateway = new Gateway();
		AppVersion appVersion=JSONObject.parseObject(versionJson, AppVersion.class);
		try{
			gateway = JSON.parseObject(gatewayJson,Gateway.class);
			gatewayService.asyncGatewayInfo(gateway);
			AppVersion aa=new AppVersion();
			aa.setGatewayNo(appVersion.getGatewayNo());
			aa.setVersionType(6);
			AppVersion version=themeService.getAppVersionByGatewayNoVersionType(aa);
			if (version!=null) {
				themeService.updateVersion(appVersion);
			}else{
				themeService.addAppVersion(appVersion);
			}
			message.setResult(SUCCESS_MESSAGE);
			message.setMessageInfo("同步成功");
		}catch(Exception e){
			logger.error("同步网关失败", e);
			message.setResult(ERROR_MESSAGE);
			message.setMessageInfo("同步失败");
		}
		messageJson = JSONObject.toJSONString(message);
		return messageJson;
	}
	
	/**
	 * @Description:同步网关         手机从服务器获取网关信息
	 * @param phoneNum
	 * @return
	 * @test by xiaobai 2016-4-16 OK
	 */
	@ResponseBody
	@RequestMapping(value = "/appGetGatewayInfo", method = RequestMethod.POST,produces= { "application/json;charset=UTF-8" })
	public String getGatewayInfo(String phoneNum){
		Message message = new Message();
		String messageJson = "";
		Gateway gateway = new Gateway();
		try{
			String gatewayNo=userService.loadUserByPhonenum(phoneNum).getGatewayNo();
			gateway = gatewayService.getGatewayInfo(gatewayNo);
			AppVersion appVersion=new AppVersion();
			appVersion.setPhoneNum(phoneNum);
			appVersion.setVersionType(6);			//6 代表网关同步
			AppVersion version=themeService.getAppVersionByPhoneNumVersionType(appVersion);
			message.setDescription(JSONObject.toJSONString(version));
			message.setResult(SUCCESS_MESSAGE);
			message.setObject(JSONObject.toJSONString(gateway));
			message.setMessageInfo("成功获取网关信息!");
		}catch(Exception e){
			logger.error("同步网关失败", e);
			message.setResult(ERROR_MESSAGE);
			message.setMessageInfo("获取网关信息失败!");
		}
	
		messageJson = JSONObject.toJSONString(message);
		return messageJson;
	}
	
	
	private static Logger logger = Logger.getLogger(AppGatewayController.class);
}
