package com.homecoo.smarthome.cache.impl;

import java.util.concurrent.ConcurrentHashMap;



import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.homecoo.smarthome.cache.ILocalCacheManager;



/**
 * @Project: homecoo
 * @Title: LocalCacheManagerImpl
 * @Description 本地缓存，这是一个静态类
 * @author: lijz
 * @date: 2015年1月28日 下午10:06:11
 * @company: SpringMVC开发的自学项目
 * @Copyright: Copyright (c) 2014
 * @version V2.0
 */
public class LocalCacheManager implements ILocalCacheManager {
	// 创建日志
	private static Log log = LogFactory.getLog(LocalCacheManager.class);
	// 缓存的实际map对象
	private static ConcurrentHashMap<String, LocalCache> managedMap = new ConcurrentHashMap<String, LocalCache>();

	/**
	 * @Description 获取缓存
	 * @param name
	 *            缓存名
	 * @return {@link LocalCache} 返回本地缓存
	 */
	public synchronized static LocalCache getCache(String name) {
		/* 该方法保证线程安全 */

		// 如果存在该缓存返回该缓存
		if (managedMap.containsKey(name)) {
			return managedMap.get(name);
		} else {
			// 如果不存在则新建一个缓存
			LocalCache cache = new LocalCache();
			managedMap.put(name, cache);
			return cache;
		}
	}

}
