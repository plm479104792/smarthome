<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd 
               http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd ">
  
	<!-- New in Spring Security 3.1 -->
	<!-- <http pattern="/css/**" security="none"/> -->
 
	<!-- <security:http use-expressions="true"> -->
	<security:http pattern="/start" security="none" />
	<security:http auto-config="false" use-expressions="true"
		entry-point-ref="loginUrlAuthenticationEntryPoint">
		<!-- <intercept-url pattern="/XX" access="ROLE_XXX" />定义了对某个资源的访问需要某个角色的权限 -->
		<security:anonymous enabled="true" key="doesNotMatter" granted-authority="ROLE_ANONYMOUSLY" 
		  username="user"></security:anonymous>
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />
		 <security:intercept-url pattern="/pages/**"
			access="hasAnyRole('ROLE_ANONYMOUSLY','ROLE_ADMIN')" />
		
	    <!-- 	<security:intercept-url pattern="/partc/**"
			access="hasAnyRole('ROLE_PARTC','ROLE_PARTB')" />  -->
	    <!-- ******************************** -->
		<!-- a. <security:custom-filter position="XXX"/>会使用自定义的过滤器替换(position)某个过滤器,但是有3个不能替换:HttpSessionContextIntegrationFilter, 
			ExceptionTranslationFilter, FilterSecurityInterceptor.但是可以使用before或after 
			b. 除了使用position外，还可以使用before，after加入自定义的过滤器，还有的关键字包括first，last代表这个过滤器链的头和尾 -->
		<security:custom-filter position="FORM_LOGIN_FILTER"
			ref="securityFilter" />
		<!-- ******************************** -->
	
		<security:logout logout-url="/j_spring_security_logout"
			logout-success-url="/smarthome" delete-cookies="true" />
		<security:session-management
			invalid-session-url="/user-login-page"
			session-authentication-error-url="/user-login-page">
			<security:concurrency-control
				max-sessions="1" expired-url="/smarthome" error-if-maximum-exceeded="false" />
		</security:session-management>
	</security:http>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider user-service-ref="userDetailsServiceImpl">
			<security:password-encoder hash="sha">
				<security:salt-source user-property="username" />
			</security:password-encoder>
		</security:authentication-provider>

	</security:authentication-manager>
	<!-- <security:authentication-provider user-service-ref="userDetailsServiceImpl"> 
		<security:password-encoder hash="sha"> <security:salt-source user-property="username" 
		/> </security:password-encoder> </security:authentication-provider> -->
	<bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/user-login-page" />
	</bean>
	<bean id="securityFilter" class="com.homecoo.smarthome.security.filter.AuthenticationFilter">
		<property name="filterProcessesUrl" value="/j_spring_security_check" />
		<property name="authenticationManager" ref="authenticationManager" />
		<!-- 应该是此处调用authenticationManager来获取用户名映射的角色码code，通过code来判断登录后的跳转页面 -->

		<property name="authenticationFailureHandler">
			<bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<property name="defaultFailureUrl" value="/user-login-page?result=failed" />
			</bean>
		</property>

		<property name="authenticationSuccessHandler">
			<bean class="com.homecoo.smarthome.security.handler.ExtrAuthenticationSuccessHandler">
				<property name="defaultTargetUrl" value="/smarthome" />
			</bean>
		</property>
	</bean>
</beans>